services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: gomuseum_postgres
    environment:
      POSTGRES_DB: gomuseum
      POSTGRES_USER: gomuseum
      POSTGRES_PASSWORD: gomuseum123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - gomuseum_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gomuseum -d gomuseum"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gomuseum_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - gomuseum_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: gomuseum_api
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql://gomuseum:gomuseum123@postgres:5432/gomuseum
      
      # Redis
      REDIS_URL: redis://redis:6379
      
      # Application
      ENVIRONMENT: development
      DEBUG: "true"
      
      # AI Services (will be set via .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      
      # Business Logic
      FREE_QUOTA_LIMIT: 5
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./gomuseum_api:/app
      - ./logs:/app/logs
    networks:
      - gomuseum_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flutter Web (for development)
  flutter_web:
    build:
      context: .
      dockerfile: docker/Dockerfile.flutter
    container_name: gomuseum_flutter
    ports:
      - "3000:3000"
    environment:
      API_BASE_URL: http://localhost:8000
    volumes:
      - ./gomuseum_app:/app
    networks:
      - gomuseum_network
    profiles:
      - web
    restart: unless-stopped

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: gomuseum_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - gomuseum_network
    profiles:
      - production
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  gomuseum_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16